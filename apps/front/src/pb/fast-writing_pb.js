// source: fast-writing.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var models_query_pb = require('./models/query_pb.js');
goog.object.extend(proto, models_query_pb);
var models_user_pb = require('./models/user_pb.js');
goog.object.extend(proto, models_user_pb);
var models_contents_pb = require('./models/contents_pb.js');
goog.object.extend(proto, models_contents_pb);
goog.exportSymbol('proto.fastwriting.CreateContentsRequest', null, global);
goog.exportSymbol('proto.fastwriting.CreateContentsResponse', null, global);
goog.exportSymbol('proto.fastwriting.CreateQuizRequest', null, global);
goog.exportSymbol('proto.fastwriting.CreateQuizResponse', null, global);
goog.exportSymbol('proto.fastwriting.DeleteContentsRequest', null, global);
goog.exportSymbol('proto.fastwriting.DeleteQuizRequest', null, global);
goog.exportSymbol('proto.fastwriting.DeleteResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.CreateContentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.CreateContentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.CreateContentsRequest.displayName = 'proto.fastwriting.CreateContentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.CreateContentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.CreateContentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.CreateContentsResponse.displayName = 'proto.fastwriting.CreateContentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.DeleteContentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.DeleteContentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.DeleteContentsRequest.displayName = 'proto.fastwriting.DeleteContentsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.DeleteResponse.displayName = 'proto.fastwriting.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.CreateQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.CreateQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.CreateQuizRequest.displayName = 'proto.fastwriting.CreateQuizRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.CreateQuizResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.CreateQuizResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.CreateQuizResponse.displayName = 'proto.fastwriting.CreateQuizResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.fastwriting.DeleteQuizRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.fastwriting.DeleteQuizRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.fastwriting.DeleteQuizRequest.displayName = 'proto.fastwriting.DeleteQuizRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.CreateContentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.CreateContentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.CreateContentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateContentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contents: (f = msg.getContents()) && models_contents_pb.Contents.toObject(includeInstance, f),
    userid: (f = msg.getUserid()) && models_user_pb.UserId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.CreateContentsRequest}
 */
proto.fastwriting.CreateContentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.CreateContentsRequest;
  return proto.fastwriting.CreateContentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.CreateContentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.CreateContentsRequest}
 */
proto.fastwriting.CreateContentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_contents_pb.Contents;
      reader.readMessage(value,models_contents_pb.Contents.deserializeBinaryFromReader);
      msg.setContents(value);
      break;
    case 2:
      var value = new models_user_pb.UserId;
      reader.readMessage(value,models_user_pb.UserId.deserializeBinaryFromReader);
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.CreateContentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.CreateContentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.CreateContentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateContentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContents();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_contents_pb.Contents.serializeBinaryToWriter
    );
  }
  f = message.getUserid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      models_user_pb.UserId.serializeBinaryToWriter
    );
  }
};


/**
 * optional models.Contents contents = 1;
 * @return {?proto.models.Contents}
 */
proto.fastwriting.CreateContentsRequest.prototype.getContents = function() {
  return /** @type{?proto.models.Contents} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.Contents, 1));
};


/**
 * @param {?proto.models.Contents|undefined} value
 * @return {!proto.fastwriting.CreateContentsRequest} returns this
*/
proto.fastwriting.CreateContentsRequest.prototype.setContents = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateContentsRequest} returns this
 */
proto.fastwriting.CreateContentsRequest.prototype.clearContents = function() {
  return this.setContents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateContentsRequest.prototype.hasContents = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional models.UserId userId = 2;
 * @return {?proto.models.UserId}
 */
proto.fastwriting.CreateContentsRequest.prototype.getUserid = function() {
  return /** @type{?proto.models.UserId} */ (
    jspb.Message.getWrapperField(this, models_user_pb.UserId, 2));
};


/**
 * @param {?proto.models.UserId|undefined} value
 * @return {!proto.fastwriting.CreateContentsRequest} returns this
*/
proto.fastwriting.CreateContentsRequest.prototype.setUserid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateContentsRequest} returns this
 */
proto.fastwriting.CreateContentsRequest.prototype.clearUserid = function() {
  return this.setUserid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateContentsRequest.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.CreateContentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.CreateContentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.CreateContentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateContentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    contents: (f = msg.getContents()) && models_contents_pb.Contents.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.CreateContentsResponse}
 */
proto.fastwriting.CreateContentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.CreateContentsResponse;
  return proto.fastwriting.CreateContentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.CreateContentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.CreateContentsResponse}
 */
proto.fastwriting.CreateContentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreated(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new models_contents_pb.Contents;
      reader.readMessage(value,models_contents_pb.Contents.deserializeBinaryFromReader);
      msg.setContents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.CreateContentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.CreateContentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.CreateContentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateContentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContents();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      models_contents_pb.Contents.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool created = 1;
 * @return {boolean}
 */
proto.fastwriting.CreateContentsResponse.prototype.getCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fastwriting.CreateContentsResponse} returns this
 */
proto.fastwriting.CreateContentsResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.fastwriting.CreateContentsResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fastwriting.CreateContentsResponse} returns this
 */
proto.fastwriting.CreateContentsResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional models.Contents contents = 3;
 * @return {?proto.models.Contents}
 */
proto.fastwriting.CreateContentsResponse.prototype.getContents = function() {
  return /** @type{?proto.models.Contents} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.Contents, 3));
};


/**
 * @param {?proto.models.Contents|undefined} value
 * @return {!proto.fastwriting.CreateContentsResponse} returns this
*/
proto.fastwriting.CreateContentsResponse.prototype.setContents = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateContentsResponse} returns this
 */
proto.fastwriting.CreateContentsResponse.prototype.clearContents = function() {
  return this.setContents(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateContentsResponse.prototype.hasContents = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.DeleteContentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.DeleteContentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.DeleteContentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteContentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentsid: (f = msg.getContentsid()) && models_contents_pb.ContentsId.toObject(includeInstance, f),
    userid: (f = msg.getUserid()) && models_user_pb.UserId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.DeleteContentsRequest}
 */
proto.fastwriting.DeleteContentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.DeleteContentsRequest;
  return proto.fastwriting.DeleteContentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.DeleteContentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.DeleteContentsRequest}
 */
proto.fastwriting.DeleteContentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_contents_pb.ContentsId;
      reader.readMessage(value,models_contents_pb.ContentsId.deserializeBinaryFromReader);
      msg.setContentsid(value);
      break;
    case 2:
      var value = new models_user_pb.UserId;
      reader.readMessage(value,models_user_pb.UserId.deserializeBinaryFromReader);
      msg.setUserid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.DeleteContentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.DeleteContentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.DeleteContentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteContentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentsid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_contents_pb.ContentsId.serializeBinaryToWriter
    );
  }
  f = message.getUserid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      models_user_pb.UserId.serializeBinaryToWriter
    );
  }
};


/**
 * optional models.ContentsId contentsId = 1;
 * @return {?proto.models.ContentsId}
 */
proto.fastwriting.DeleteContentsRequest.prototype.getContentsid = function() {
  return /** @type{?proto.models.ContentsId} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.ContentsId, 1));
};


/**
 * @param {?proto.models.ContentsId|undefined} value
 * @return {!proto.fastwriting.DeleteContentsRequest} returns this
*/
proto.fastwriting.DeleteContentsRequest.prototype.setContentsid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.DeleteContentsRequest} returns this
 */
proto.fastwriting.DeleteContentsRequest.prototype.clearContentsid = function() {
  return this.setContentsid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.DeleteContentsRequest.prototype.hasContentsid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional models.UserId userId = 2;
 * @return {?proto.models.UserId}
 */
proto.fastwriting.DeleteContentsRequest.prototype.getUserid = function() {
  return /** @type{?proto.models.UserId} */ (
    jspb.Message.getWrapperField(this, models_user_pb.UserId, 2));
};


/**
 * @param {?proto.models.UserId|undefined} value
 * @return {!proto.fastwriting.DeleteContentsRequest} returns this
*/
proto.fastwriting.DeleteContentsRequest.prototype.setUserid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.DeleteContentsRequest} returns this
 */
proto.fastwriting.DeleteContentsRequest.prototype.clearUserid = function() {
  return this.setUserid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.DeleteContentsRequest.prototype.hasUserid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deleted: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.DeleteResponse}
 */
proto.fastwriting.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.DeleteResponse;
  return proto.fastwriting.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.DeleteResponse}
 */
proto.fastwriting.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bool deleted = 1;
 * @return {boolean}
 */
proto.fastwriting.DeleteResponse.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fastwriting.DeleteResponse} returns this
 */
proto.fastwriting.DeleteResponse.prototype.setDeleted = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.fastwriting.DeleteResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fastwriting.DeleteResponse} returns this
 */
proto.fastwriting.DeleteResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.CreateQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.CreateQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.CreateQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quiz: (f = msg.getQuiz()) && models_contents_pb.Quiz.toObject(includeInstance, f),
    contentsid: (f = msg.getContentsid()) && models_contents_pb.ContentsId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.CreateQuizRequest}
 */
proto.fastwriting.CreateQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.CreateQuizRequest;
  return proto.fastwriting.CreateQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.CreateQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.CreateQuizRequest}
 */
proto.fastwriting.CreateQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_contents_pb.Quiz;
      reader.readMessage(value,models_contents_pb.Quiz.deserializeBinaryFromReader);
      msg.setQuiz(value);
      break;
    case 2:
      var value = new models_contents_pb.ContentsId;
      reader.readMessage(value,models_contents_pb.ContentsId.deserializeBinaryFromReader);
      msg.setContentsid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.CreateQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.CreateQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.CreateQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuiz();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_contents_pb.Quiz.serializeBinaryToWriter
    );
  }
  f = message.getContentsid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      models_contents_pb.ContentsId.serializeBinaryToWriter
    );
  }
};


/**
 * optional models.Quiz quiz = 1;
 * @return {?proto.models.Quiz}
 */
proto.fastwriting.CreateQuizRequest.prototype.getQuiz = function() {
  return /** @type{?proto.models.Quiz} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.Quiz, 1));
};


/**
 * @param {?proto.models.Quiz|undefined} value
 * @return {!proto.fastwriting.CreateQuizRequest} returns this
*/
proto.fastwriting.CreateQuizRequest.prototype.setQuiz = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateQuizRequest} returns this
 */
proto.fastwriting.CreateQuizRequest.prototype.clearQuiz = function() {
  return this.setQuiz(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateQuizRequest.prototype.hasQuiz = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional models.ContentsId contentsId = 2;
 * @return {?proto.models.ContentsId}
 */
proto.fastwriting.CreateQuizRequest.prototype.getContentsid = function() {
  return /** @type{?proto.models.ContentsId} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.ContentsId, 2));
};


/**
 * @param {?proto.models.ContentsId|undefined} value
 * @return {!proto.fastwriting.CreateQuizRequest} returns this
*/
proto.fastwriting.CreateQuizRequest.prototype.setContentsid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateQuizRequest} returns this
 */
proto.fastwriting.CreateQuizRequest.prototype.clearContentsid = function() {
  return this.setContentsid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateQuizRequest.prototype.hasContentsid = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.CreateQuizResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.CreateQuizResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.CreateQuizResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateQuizResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    created: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    quizid: (f = msg.getQuizid()) && models_contents_pb.QuizId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.CreateQuizResponse}
 */
proto.fastwriting.CreateQuizResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.CreateQuizResponse;
  return proto.fastwriting.CreateQuizResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.CreateQuizResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.CreateQuizResponse}
 */
proto.fastwriting.CreateQuizResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreated(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = new models_contents_pb.QuizId;
      reader.readMessage(value,models_contents_pb.QuizId.deserializeBinaryFromReader);
      msg.setQuizid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.CreateQuizResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.CreateQuizResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.CreateQuizResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.CreateQuizResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCreated();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getQuizid();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      models_contents_pb.QuizId.serializeBinaryToWriter
    );
  }
};


/**
 * optional bool created = 1;
 * @return {boolean}
 */
proto.fastwriting.CreateQuizResponse.prototype.getCreated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.fastwriting.CreateQuizResponse} returns this
 */
proto.fastwriting.CreateQuizResponse.prototype.setCreated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.fastwriting.CreateQuizResponse.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.fastwriting.CreateQuizResponse} returns this
 */
proto.fastwriting.CreateQuizResponse.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional models.QuizId quizId = 3;
 * @return {?proto.models.QuizId}
 */
proto.fastwriting.CreateQuizResponse.prototype.getQuizid = function() {
  return /** @type{?proto.models.QuizId} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.QuizId, 3));
};


/**
 * @param {?proto.models.QuizId|undefined} value
 * @return {!proto.fastwriting.CreateQuizResponse} returns this
*/
proto.fastwriting.CreateQuizResponse.prototype.setQuizid = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.CreateQuizResponse} returns this
 */
proto.fastwriting.CreateQuizResponse.prototype.clearQuizid = function() {
  return this.setQuizid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.CreateQuizResponse.prototype.hasQuizid = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.fastwriting.DeleteQuizRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.fastwriting.DeleteQuizRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.fastwriting.DeleteQuizRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteQuizRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    quizid: (f = msg.getQuizid()) && models_contents_pb.QuizId.toObject(includeInstance, f),
    contentsid: (f = msg.getContentsid()) && models_contents_pb.ContentsId.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.fastwriting.DeleteQuizRequest}
 */
proto.fastwriting.DeleteQuizRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.fastwriting.DeleteQuizRequest;
  return proto.fastwriting.DeleteQuizRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.fastwriting.DeleteQuizRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.fastwriting.DeleteQuizRequest}
 */
proto.fastwriting.DeleteQuizRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new models_contents_pb.QuizId;
      reader.readMessage(value,models_contents_pb.QuizId.deserializeBinaryFromReader);
      msg.setQuizid(value);
      break;
    case 2:
      var value = new models_contents_pb.ContentsId;
      reader.readMessage(value,models_contents_pb.ContentsId.deserializeBinaryFromReader);
      msg.setContentsid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.fastwriting.DeleteQuizRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.fastwriting.DeleteQuizRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.fastwriting.DeleteQuizRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.fastwriting.DeleteQuizRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuizid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      models_contents_pb.QuizId.serializeBinaryToWriter
    );
  }
  f = message.getContentsid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      models_contents_pb.ContentsId.serializeBinaryToWriter
    );
  }
};


/**
 * optional models.QuizId quizId = 1;
 * @return {?proto.models.QuizId}
 */
proto.fastwriting.DeleteQuizRequest.prototype.getQuizid = function() {
  return /** @type{?proto.models.QuizId} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.QuizId, 1));
};


/**
 * @param {?proto.models.QuizId|undefined} value
 * @return {!proto.fastwriting.DeleteQuizRequest} returns this
*/
proto.fastwriting.DeleteQuizRequest.prototype.setQuizid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.DeleteQuizRequest} returns this
 */
proto.fastwriting.DeleteQuizRequest.prototype.clearQuizid = function() {
  return this.setQuizid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.DeleteQuizRequest.prototype.hasQuizid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional models.ContentsId contentsId = 2;
 * @return {?proto.models.ContentsId}
 */
proto.fastwriting.DeleteQuizRequest.prototype.getContentsid = function() {
  return /** @type{?proto.models.ContentsId} */ (
    jspb.Message.getWrapperField(this, models_contents_pb.ContentsId, 2));
};


/**
 * @param {?proto.models.ContentsId|undefined} value
 * @return {!proto.fastwriting.DeleteQuizRequest} returns this
*/
proto.fastwriting.DeleteQuizRequest.prototype.setContentsid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.fastwriting.DeleteQuizRequest} returns this
 */
proto.fastwriting.DeleteQuizRequest.prototype.clearContentsid = function() {
  return this.setContentsid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.fastwriting.DeleteQuizRequest.prototype.hasContentsid = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.fastwriting);
